-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
python-blosc version: 1.8.1
Blosc version: 1.16.2 ($Date:: 2019-02-03 #$)
Compressors available: ['blosclz', 'lz4', 'lz4hc', 'zlib', 'zstd']
Compressor library versions:
  BloscLZ: 1.1.0
  LZ4: 1.8.3
  Zlib: 1.2.8
  Zstd: 1.3.8
Python version: 3.6.1 (3594036cc520, May 30 2019, 09:46:13)
[PyPy 7.1.1-beta0 with GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]
Platform: Linux-5.2.2-ck1-x86_64 (#1 SMP PREEMPT Tue Jul 23 21:07:17 CDT 2019)
Linux dist: Fedora 30
Processor: x86_64
Byte-ordering: little
Detected cores: 24
Number of threads to use by default: 4
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Creating a large NumPy array with 10**8 int64 elements:
  [       0        1        2 ... 99999997 99999998 99999999]
  Time for copying array with np.copy():     0.419 s

Using *** blosclz *** compressor::
  Time for pack_array/unpack_array:     8.138/13.919 s.	Compr ratio: 150.11
  Time for compress_ptr/decompress_ptr: 0.673/0.764 s.	Compr ratio: 152.37
Using *** lz4 *** compressor::
  Time for pack_array/unpack_array:     8.788/15.750 s.	Compr ratio: 151.70
  Time for compress_ptr/decompress_ptr: 0.663/0.346 s.	Compr ratio: 152.14
Using *** lz4hc *** compressor::
  Time for pack_array/unpack_array:     8.927/14.073 s.	Compr ratio: 151.79
  Time for compress_ptr/decompress_ptr: 0.854/0.330 s.	Compr ratio: 152.14
Using *** zlib *** compressor::
  Time for pack_array/unpack_array:     10.220/14.850 s.	Compr ratio: 310.43
  Time for compress_ptr/decompress_ptr: 2.363/1.056 s.	Compr ratio: 312.12
Using *** zstd *** compressor::
  Time for pack_array/unpack_array:     9.657/14.721 s.	Compr ratio: 458.03
  Time for compress_ptr/decompress_ptr: 1.417/0.845 s.	Compr ratio: 463.69
